# COUNTER DETECTION

import cv2 as cv
img=cv.imread('photos/cats, jpg') 
cv. imshow('Cats', img) 
#convert to gray scale
gray =cv.cvColor(img, cv. COLOR_BGR2GRAV) 
cv. imshow ('Gray', gray) 

# Finding edge Cascades using canny edge detector
blur=cv.GaussianBlur(gray, (5, 5), cv. BORDER_DEFAULT) 
cv.imshow ('BLUR', blur) 
canny=cv.canny(blur,125, 175) 
cv. imshow('Canny Edges', canny) 
contours. hierarchies=cv.findContours(Canny, cv. RETR_LIST, cv. CHAIN_APPROX_SIMPLE) 
print(f'{len(contours) }contour (s) found! ') 
cv. waitkey(0) 

#Binarize the image using cv. threshold and finding contours

import cv2 as cv
import numpy as np
img=cv.imread('photos/cats, jpg') 
cv. imshow ('Cats', img) 
gray =cv.cvColor(img, cv. COLOR_BGR2GRAV) 
cv. imshow ('Gray', gray) 
ret, thresh=cv.threshold(gray, 125,255) 
contours, hierarchies=cv.findContours(thresh, cv. RETR_LIST, cv. CHAIN_APPROX_SIMPLE) 
print(f'{len(contours) }contour(s) found! ') 
blank=np.zeros(img.shape, style='unit8') 
cv. imshow ('Blank', blank) 
cv. drawContours(blank, contours, -1, (0, 0,255), 2) 
cv. imshow ('contours Drawn', blank) 

